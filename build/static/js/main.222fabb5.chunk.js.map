{"version":3,"sources":["images/images.js","App.js","hooks/useWindowSize.js","index.js"],"names":["images","App","size","getSize","width","window","innerWidth","height","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","app","useRef","scrollContainer","skewConfigs","ease","current","previous","rounded","document","body","style","getBoundingClientRect","requestAnimationFrame","skewScrolling","scrollY","Math","round","skew","transform","ref","className","map","image","index","key","src","alt","ReactDOM","render","StrictMode","getElementById"],"mappings":"mMAAA,IASeA,EATA,CACb,sIACA,wIACA,yIACA,qIACA,wIACA,0IC2FaC,MA3Ff,WAGE,IAAMC,ECPO,WACb,SAASC,IACP,MAAO,CACLC,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,aAJmB,MAiBFC,mBAASN,GAjBP,mBAiB/BO,EAjB+B,KAiBnBC,EAjBmB,KA4BtC,OATAC,qBAAU,WACR,SAASC,IACPF,EAAcR,KAIhB,OADAE,OAAOS,iBAAiB,SAAUD,GAC3B,kBAAMR,OAAOU,oBAAoB,SAAUF,MACjD,IAEIH,EDrBMM,GAKPC,EAAMC,mBACNC,EAAkBD,mBAOlBE,EAAc,CAClBC,KAAM,GACNC,QAAS,EACTC,SAAU,EACVC,QAAS,GAMXZ,qBAAU,WAERa,SAASC,KAAKC,MAAMpB,OAApB,UACEY,EAAgBG,QAAQM,wBAAwBrB,OADlD,QAIC,CAACL,EAAKK,SAKTK,qBAAU,WACRiB,uBAAsB,kBAAMC,SAC3B,IAMH,IAAMA,EAAgB,SAAhBA,IAEJV,EAAYE,QAAUjB,OAAO0B,QAC7BX,EAAYG,WACTH,EAAYE,QAAUF,EAAYG,UAAYH,EAAYC,KAC7DD,EAAYI,QAAUQ,KAAKC,MAA6B,IAAvBb,EAAYG,UAAkB,IAM/D,IAGMW,EAAkB,OAHLd,EAAYE,QAAUF,EAAYI,SACnBtB,EAAKE,OAMvCe,EAAgBG,QAAQK,MAAMQ,UAA9B,0BAA6Df,EAAYI,QAAzE,wBAAgGU,EAAhG,QAKAL,uBAAsB,kBAAMC,QAK9B,OAEE,yBAAKM,IAAKnB,EAAKoB,UAAU,OACvB,yBAAKD,IAAKjB,EAAiBkB,UAAU,UAClCrC,EAAOsC,KAAI,SAACC,EAAOC,GAAR,OACV,oCACE,yBAAKC,IAAKD,EAAOH,UAAU,iBACzB,yBAAKK,IAAKH,EAAOI,IAAG,iBAAYH,MAElC,sCACS,0BAAMH,UAAU,WAAhB,mB,KEpFrBO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFrB,SAASsB,eAAe,U","file":"static/js/main.222fabb5.chunk.js","sourcesContent":["const images = [\n  \"https://images.unsplash.com/photo-1551392505-f4056032826e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1497&q=80\",\n  \"https://images.unsplash.com/photo-1594312180721-3b5217cfc65f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80\",\n  \"https://images.unsplash.com/photo-1593806812862-1dc510b769a8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2851&q=80\",\n  \"https://images.unsplash.com/photo-1558507652-2d9626c4e67a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80\",\n  \"https://images.unsplash.com/photo-1484517186945-df8151a1a871?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=987&q=80\",\n  \"https://images.unsplash.com/photo-1520813792240-56fc4a3765a7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\",\n];\n\nexport default images;\n","import React, { useRef, useEffect } from \"react\";\nimport useWindowSize from \"./hooks/useWindowSize\"; //3\nimport images from \"./images/images\";\n//\n//\n\nfunction App() {\n  // HOOK\n  //   4\n  const size = useWindowSize();\n  //\n  //\n  //1  ---------------\n  //   REF\n  const app = useRef();\n  const scrollContainer = useRef();\n  //\n  //\n  //\n  //\n  //   ---------------\n  // 7 related to the 6 step\n  const skewConfigs = {\n    ease: 0.1, //this is the reason why it dodnt work the first time, the problem was that i set it up at 1 instead of 0.1\n    current: 0,\n    previous: 0,\n    rounded: 0,\n  };\n  //\n  //\n  // 2 ------------------\n  //\n  useEffect(() => {\n    //   what the useEffect is doing here is replacing the componentdidMOunt\n    document.body.style.height = `${\n      scrollContainer.current.getBoundingClientRect().height\n    }px`;\n    // 5  after you add this: const size = useWindowSize(); THEN ADD this: [size.height]);\n  }, [size.height]);\n  //\n  //\n  //\n  // 11 ------------\n  useEffect(() => {\n    requestAnimationFrame(() => skewScrolling());\n  }, []);\n  //\n  //\n  //\n  // 6 ------------------\n  //\n  const skewScrolling = () => {\n    //   all the following is connected to the skewConfigs function on line 18\n    skewConfigs.current = window.scrollY;\n    skewConfigs.previous +=\n      (skewConfigs.current - skewConfigs.previous) * skewConfigs.ease;\n    skewConfigs.rounded = Math.round(skewConfigs.previous * 100) / 100;\n\n    //\n    //\n    //\n    // 8 ------------  Difference between\n    const difference = skewConfigs.current - skewConfigs.rounded;\n    const acceleration = difference / size.width; //you access size.width through useWindowSize(); on line 9, thats connected to the function in the HOOK file\n    const velocity = +acceleration;\n    const skew = velocity * 5.5; //original 7.5  the more the scroll is emphasized the more the deg of the image/content , is going to move in a direction\n    //\n    //\n    // 9 ----------   ASSIGN the scroll container the skew\n    scrollContainer.current.style.transform = `translate3d(0, -${skewConfigs.rounded}px, 0) skewY(${skew}deg)`;\n    //\n    //\n    // 10 ------------\n\n    requestAnimationFrame(() => skewScrolling());\n  };\n  //\n  //\n\n  return (\n    //   2  ref={app} and ref={scrollContainer}\n    <div ref={app} className=\"App\">\n      <div ref={scrollContainer} className=\"scroll\">\n        {images.map((image, index) => (\n          <>\n            <div key={index} className=\"img-container\">\n              <img src={image} alt={`people ${index}`} />\n            </div>\n            <h2>\n              Skewww <span className=\"outline\"> Scroll</span>\n            </h2>\n          </>\n        ))}\n      </div>\n    </div>\n  );\n}\nexport default App;\n\n/*\n\n  const skewScrolling = () => {\n    skewConfigs.current = window.scrollY;\n    skewConfigs.previous +=\n      (skewConfigs.current - skewConfigs.previous) * skewConfigs.ease;\n    skewConfigs.rounded = Math.round(skewConfigs.previous * 100) / 100;\n\n    // variables for the velocity\n    //\n    // Difference between\n    const difference = skewConfigs.current - skewConfigs.rounded;\n    const acceleration = difference / size.width;\n    const velocity = +acceleration;\n    const skew = velocity * 7.5;\n\n    //\n    //\n    //\n    scrollContainer.current.style.transform = `translate3d(0, -${skewConfigs.rounded}px, 0) skewY(${skew}deg)`;\n    //\n    //\n    //\n\n    requestAnimationFrame(() => skewScrolling());\n\n\n\n\n\n*/\n","import { useState, useEffect } from \"react\";\n\nexport default function useWindowSize() {\n  function getSize() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  }\n\n/*\n\n  here you grab the innerWidth and the innerHeight in getSize from line 4, \n  to be used now in the event listener in line 19 , as the handleResize from\n  line28 is connected to the function inside the useEffect(()) handle Resize in line 23\n\n\n\n*/\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowSize;\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./scss/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}